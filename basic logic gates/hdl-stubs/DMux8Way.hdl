/**
 * 8-way demultiplexor:
 * [a, b, c, d, e, f, g, h] = [in, 0,  0,  0,  0,  0,  0,  0] if sel = 000
 *                            [0, in,  0,  0,  0,  0,  0,  0] if sel = 001
 *                            [0,  0, in,  0,  0,  0,  0,  0] if sel = 010
 *                            [0,  0,  0, in,  0,  0,  0,  0] if sel = 011
 *                            [0,  0,  0,  0, in,  0,  0,  0] if sel = 100
 *                            [0,  0,  0,  0,  0, in,  0,  0] if sel = 101
 *                            [0,  0,  0,  0,  0,  0, in,  0] if sel = 110
 *                            [0,  0,  0,  0,  0,  0,  0, in] if sel = 111
 *
 * S2S1S0
 * take 'in' divide in either of the outA or outB streams using S2
 * use 4 way dmux to divide 'in', set up an output signal based on S1S0 
 */
CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    DMux(in=in, sel=sel[2], a=outABCD, b=outEFGH);  

    // now, based on the values of S1&S0, outABCD & outEFGH will be assigned to respective output pins
    DMux4Way(in=outABCD, sel=sel[0..1], a=a, b=b, c=c, d=d);  
    DMux4Way(in=outEFGH, sel=sel[0..1], a=e, b=f, c=g, d=h);  
}
